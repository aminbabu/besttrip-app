/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "../public/src/js/custom/apps/invoice-management/list/list.js":
/*!********************************************************************!*\
  !*** ../public/src/js/custom/apps/invoice-management/list/list.js ***!
  \********************************************************************/
/***/ (() => {

eval("\n\n// Class definition\nvar KTInvoiceList = (function () {\n  // Define shared variables\n  var datatable;\n  var datepicker;\n  var filterBookingType;\n  var table;\n\n  // Private functions\n  var initInvoiceList = function () {\n    // Set date data order\n    const tableRows = table.querySelectorAll(\"tbody tr\");\n\n    tableRows.forEach((row) => {\n      const dateRow = row.querySelectorAll(\"td\");\n      const realDate = moment(dateRow[5].innerHTML, \"DD MMM YYYY, LT\").format(); // select date from 5th column in table\n      dateRow[5].setAttribute(\"data-order\", realDate);\n    });\n\n    // Init datatable --- more info on datatables: https://datatables.net/manual/\n    datatable = $(table).DataTable({\n      info: false,\n      order: [],\n      columnDefs: [\n        { orderable: false, targets: 0 }, // Disable ordering on column 0 (checkbox)\n        { orderable: false, targets: 7 }, // Disable ordering on column 7 (actions)\n      ],\n    });\n\n    // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw\n    datatable.on(\"draw\", function () {\n      initToggleToolbar();\n      handleDownloadRows();\n      toggleToolbars();\n      KTMenu.init(); // reinit KTMenu instances\n    });\n  };\n\n  // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\n  var handleSearchDatatable = () => {\n    const filterSearch = document.querySelector(\n      '[data-kt-invoice-table-filter=\"search\"]'\n    );\n    filterSearch.addEventListener(\"keyup\", function (e) {\n      datatable.search(e.target.value).draw();\n    });\n  };\n\n  // Filter Datatable\n  var handleFilterDatatable = () => {\n    // Select filter options\n    filterBookingType = document.querySelector(\n      '[data-kt-invoice-table-filter=\"booking_type\"]'\n    );\n    const filterButton = document.querySelector(\n      '[data-kt-invoice-table-filter=\"filter\"]'\n    );\n\n    // Filter datatable on submit\n    filterButton.addEventListener(\"click\", function () {\n      // Get filter values\n      let bookingTypeValue = filterBookingType.value;\n\n      // Build filter string from filter options\n      const filterString = bookingTypeValue;\n\n      // Filter datatable --- official docs reference: https://datatables.net/reference/api/search()\n      datatable.search(filterString).draw();\n    });\n  };\n\n  // Download invoice\n  var handleDownloadRows = () => {\n    // Select all download buttons\n    const downloadButtons = table.querySelectorAll(\n      '[data-kt-invoice-table-filter=\"download_row\"]'\n    );\n\n    downloadButtons.forEach((d) => {\n      // Download button on click\n      d.addEventListener(\"click\", function (e) {\n        e.preventDefault();\n\n        // Select parent row\n        const parent = e.target.closest(\"tr\");\n\n        // Get invoice name\n        const invoiceName = parent.querySelectorAll(\"td\")[1].innerText;\n\n        // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\n        Swal.fire({\n          text: \"Are you sure you want to download \" + invoiceName + \"?\",\n          icon: \"warning\",\n          showCancelButton: true,\n          buttonsStyling: false,\n          confirmButtonText: \"Yes, download!\",\n          cancelButtonText: \"No, cancel\",\n          customClass: {\n            confirmButton: \"btn fw-bold btn-danger\",\n            cancelButton: \"btn fw-bold btn-active-light-primary\",\n          },\n        }).then(function (result) {\n          if (result.value) {\n            Swal.fire({\n              text: \"You have downloaded \" + invoiceName + \"!.\",\n              icon: \"success\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn fw-bold btn-primary\",\n              },\n            }).then(function () {\n              // Remove current row\n              datatable.row($(parent)).remove().draw();\n            });\n          } else if (result.dismiss === \"cancel\") {\n            Swal.fire({\n              text: invoiceName + \" was not downloaded.\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn fw-bold btn-primary\",\n              },\n            });\n          }\n        });\n      });\n    });\n  };\n\n  // Reset Filter\n  var handleResetForm = () => {\n    // Select reset button\n    const resetButton = document.querySelector(\n      '[data-kt-invoice-table-filter=\"reset\"]'\n    );\n\n    // Reset datatable\n    resetButton.addEventListener(\"click\", function () {\n      // Reset month\n      $(filterBookingType).val(null).trigger(\"change\");\n\n      // Reset bookingType type\n      filterBookingType.value = \"\";\n\n      // Reset datepicker\n      $(datepicker).val(\"\");\n\n      // Reset datatable --- official docs reference: https://datatables.net/reference/api/search()\n      datatable.search(\"\").draw();\n    });\n  };\n\n  // Init toggle toolbar\n  var initToggleToolbar = () => {\n    // Toggle selected action toolbar\n    // Select all checkboxes\n    const checkboxes = table.querySelectorAll('[type=\"checkbox\"]');\n\n    // Select elements\n    const downloadSelected = document.querySelector(\n      '[data-kt-invoice-table-select=\"download_selected\"]'\n    );\n\n    // Toggle download selected toolbar\n    checkboxes.forEach((c) => {\n      // Checkbox on click event\n      c.addEventListener(\"click\", function () {\n        setTimeout(function () {\n          toggleToolbars();\n        }, 50);\n      });\n    });\n\n    // Downloaded selected rows\n    downloadSelected.addEventListener(\"click\", function () {\n      // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\n      Swal.fire({\n        text: \"Are you sure you want to download selected invoice?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        buttonsStyling: false,\n        confirmButtonText: \"Yes, download!\",\n        cancelButtonText: \"No, cancel\",\n        customClass: {\n          confirmButton: \"btn fw-bold btn-danger\",\n          cancelButton: \"btn fw-bold btn-active-light-primary\",\n        },\n      }).then(function (result) {\n        if (result.value) {\n          Swal.fire({\n            text: \"You have downloaded all selected invoice!.\",\n            icon: \"success\",\n            buttonsStyling: false,\n            confirmButtonText: \"Ok, got it!\",\n            customClass: {\n              confirmButton: \"btn fw-bold btn-primary\",\n            },\n          }).then(function () {\n            // Remove header checked box\n            const headerCheckboxes =\n              table.querySelectorAll('[type=\"checkbox\"]');\n\n            headerCheckboxes.forEach((c) => {\n              c.checked = false;\n            });\n\n            // Remove selected action toolbar\n            toggleToolbars();\n\n            // Download selected invoices\n          });\n        } else if (result.dismiss === \"cancel\") {\n          Swal.fire({\n            text: \"Selected invoice was not downloaded.\",\n            icon: \"error\",\n            buttonsStyling: false,\n            confirmButtonText: \"Ok, got it!\",\n            customClass: {\n              confirmButton: \"btn fw-bold btn-primary\",\n            },\n          });\n        }\n      });\n    });\n  };\n\n  // Toggle toolbars\n  const toggleToolbars = () => {\n    // Define variables\n    const toolbarBase = document.querySelector(\n      '[data-kt-invoice-table-toolbar=\"base\"]'\n    );\n    const toolbarSelected = document.querySelector(\n      '[data-kt-invoice-table-toolbar=\"selected\"]'\n    );\n    const selectedCount = document.querySelector(\n      '[data-kt-invoice-table-select=\"selected_count\"]'\n    );\n\n    // Select refreshed checkbox DOM elements\n    const allCheckboxes = table.querySelectorAll('tbody [type=\"checkbox\"]');\n\n    // Detect checkboxes state & count\n    let checkedState = false;\n    let count = 0;\n\n    // Count checked boxes\n    allCheckboxes.forEach((c) => {\n      if (c.checked) {\n        checkedState = true;\n        count++;\n      }\n    });\n\n    // Toggle toolbars\n    if (checkedState) {\n      selectedCount.innerHTML = count;\n      toolbarBase.classList.add(\"d-none\");\n      toolbarSelected.classList.remove(\"d-none\");\n    } else {\n      toolbarBase.classList.remove(\"d-none\");\n      toolbarSelected.classList.add(\"d-none\");\n    }\n  };\n\n  var initForm = function () {\n    // Handle datepicker range -- For more info on flatpickr plugin, please visit: https://flatpickr.js.org/\n    $('[data-kt-invoice-table-filter][name=\"date\"]').flatpickr({\n      altInput: true,\n      altFormat: \"F j, Y\",\n      dateFormat: \"Y-m-d\",\n      mode: \"range\",\n    });\n  };\n\n  // Public methods\n  return {\n    init: function () {\n      table = document.querySelector(\"#kt_invoice_table\");\n\n      if (!table) {\n        return;\n      }\n\n      initInvoiceList();\n      initToggleToolbar();\n      handleSearchDatatable();\n      handleFilterDatatable();\n      handleDownloadRows();\n      handleResetForm();\n      initForm();\n    },\n  };\n})();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTInvoiceList.init();\n});\n\n\n//# sourceURL=webpack://besttripbd/../public/src/js/custom/apps/invoice-management/list/list.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["../public/src/js/custom/apps/invoice-management/list/list.js"]();
/******/ 	
/******/ })()
;