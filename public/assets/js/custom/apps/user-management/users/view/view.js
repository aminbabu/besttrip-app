/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../public/src/js/custom/apps/user-management/users/view/view.js":
/*!***********************************************************************!*\
  !*** ../public/src/js/custom/apps/user-management/users/view/view.js ***!
  \***********************************************************************/
/***/ (() => {

eval("// Class definition\r\nconst KTUsersViewMain = (function () {\r\n    // Init login session button\r\n    const initLoginSession = () => {\r\n        const button = document.getElementById('kt_modal_users_login_session');\r\n\r\n        if (!button) {\r\n            return;\r\n        }\r\n\r\n        const url = button.getAttribute('data_kt_sign_out_all_sessions_url');\r\n\r\n        button.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n\r\n            Swal.fire({\r\n                text: 'Are you sure you would like sign out all sessions?',\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                buttonsStyling: false,\r\n                confirmButtonText: 'Yes, sign out!',\r\n                cancelButtonText: 'No, return',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-primary',\r\n                    cancelButton: 'btn btn-active-light',\r\n                },\r\n            }).then((result) => {\r\n                if (result.value) {\r\n                    // Check axios library docs: https://axios-http.com/docs/intro\r\n                    axios\r\n                        .delete(url)\r\n                        .then((response) => {\r\n                            if (response) {\r\n                                // Get user data\r\n                                const { user } = response.data || {};\r\n\r\n                                // Show success popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n                                Swal.fire({\r\n                                    text:\r\n                                        response?.data?.message ||\r\n                                        'All sessions have been signed out!',\r\n                                    icon: 'success',\r\n                                    buttonsStyling: false,\r\n                                    confirmButtonText: 'Ok, got it!',\r\n                                    customClass: {\r\n                                        confirmButton: 'btn btn-primary',\r\n                                    },\r\n                                    allowOutsideClick: false,\r\n                                }).then(() => {\r\n                                    // Redirect to the login page\r\n                                    location.href = user\r\n                                        ? `/dashboard/users/${user._id}`\r\n                                        : '/dashboard/login';\r\n                                });\r\n                            } else {\r\n                                // Show error popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n                                Swal.fire({\r\n                                    text: 'Something went wrong, please try again.',\r\n                                    icon: 'error',\r\n                                    buttonsStyling: false,\r\n                                    confirmButtonText: 'Ok, got it!',\r\n                                    customClass: {\r\n                                        confirmButton: 'btn btn-primary',\r\n                                    },\r\n                                });\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            const errors = error.response?.data?.message\r\n                                ? error.response?.data?.message\r\n                                : error?.response?.data?.errors;\r\n\r\n                            Swal.fire({\r\n                                html: `${\r\n                                    errors instanceof Array\r\n                                        ? `<ul class=\"text-start\">${Object.values(\r\n                                              error.response.data.errors\r\n                                          )\r\n                                              .map(\r\n                                                  (err) =>\r\n                                                      `<li>${err?.message}</li>`\r\n                                              )\r\n                                              .join('')}</ul>`\r\n                                        : errors\r\n                                }`,\r\n                                icon: 'error',\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: 'Ok, got it!',\r\n                                customClass: {\r\n                                    confirmButton: 'btn btn-primary',\r\n                                },\r\n                            });\r\n                        });\r\n                } else if (result.dismiss === 'cancel') {\r\n                    Swal.fire({\r\n                        text: 'Sessions are still preserved!',\r\n                        icon: 'error',\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: 'Ok, got it!',\r\n                        customClass: {\r\n                            confirmButton: 'btn btn-primary',\r\n                        },\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    // Delete two step authentication handler\r\n    const initDeleteTwoStep = () => {\r\n        const deleteButton = document.getElementById(\r\n            'kt_users_delete_two_step'\r\n        );\r\n\r\n        if (!deleteButton) {\r\n            return;\r\n        }\r\n\r\n        deleteButton.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n\r\n            Swal.fire({\r\n                text: 'Are you sure you would like remove this two-step authentication?',\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                buttonsStyling: false,\r\n                confirmButtonText: 'Yes, remove it!',\r\n                cancelButtonText: 'No, return',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-primary',\r\n                    cancelButton: 'btn btn-active-light',\r\n                },\r\n            }).then((result) => {\r\n                if (result.value) {\r\n                    Swal.fire({\r\n                        text: 'You have removed this two-step authentication!',\r\n                        icon: 'success',\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: 'Ok, got it!',\r\n                        customClass: {\r\n                            confirmButton: 'btn btn-primary',\r\n                        },\r\n                    });\r\n                } else if (result.dismiss === 'cancel') {\r\n                    Swal.fire({\r\n                        text: 'Your two-step authentication is still valid!',\r\n                        icon: 'error',\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: 'Ok, got it!',\r\n                        customClass: {\r\n                            confirmButton: 'btn btn-primary',\r\n                        },\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    return {\r\n        // Public functions\r\n        init() {\r\n            initLoginSession();\r\n            initDeleteTwoStep();\r\n        },\r\n    };\r\n})();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(() => {\r\n    KTUsersViewMain.init();\r\n});\r\n\n\n//# sourceURL=webpack://besttripbd/../public/src/js/custom/apps/user-management/users/view/view.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["../public/src/js/custom/apps/user-management/users/view/view.js"]();
/******/ 	
/******/ })()
;