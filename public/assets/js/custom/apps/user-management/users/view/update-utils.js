/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../public/src/js/custom/apps/user-management/users/view/update-utils.js":
/*!*******************************************************************************!*\
  !*** ../public/src/js/custom/apps/user-management/users/view/update-utils.js ***!
  \*******************************************************************************/
/***/ (() => {

eval("// Class definition\r\nconst KTUsersUpdateUtils = (function () {\r\n    // Shared variables\r\n    const userDisableBtn = document.getElementById('kt_users_disable_account');\r\n    const userEnableBtn = document.getElementById('kt_users_enable_account');\r\n    const userDeleteBtn = document.querySelector('#kt_users_delete_account');\r\n\r\n    // Disable user account\r\n    const initDisableStatus = () => {\r\n        if (!userDisableBtn) {\r\n            return;\r\n        }\r\n\r\n        userDisableBtn.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n\r\n            const url = userDisableBtn.getAttribute('href');\r\n\r\n            // Show confirm popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n            Swal.fire({\r\n                text: 'Are you sure you want to disable this user account?',\r\n                icon: 'warning',\r\n                buttonsStyling: false,\r\n                showCancelButton: true,\r\n                cancelButtonText: 'No, cancel',\r\n                confirmButtonText: 'Yes, disable!',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-primary',\r\n                    cancelButton: 'btn btn-light',\r\n                },\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    axios\r\n                        .get(url)\r\n                        .then((response) => {\r\n                            // Show success message. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n                            Swal.fire({\r\n                                text:\r\n                                    response?.data?.message ||\r\n                                    'User account has been disabled. Redirecting to the login page...',\r\n                                icon: 'success',\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: 'Ok, got it!',\r\n                                customClass: {\r\n                                    confirmButton: 'btn btn-primary',\r\n                                },\r\n                                allowOutsideClick: false,\r\n                                showCancelButton: false,\r\n                            }).then((outcome) => {\r\n                                if (outcome.isConfirmed) {\r\n                                    location.href = url.includes('self')\r\n                                        ? '/dashboard/login'\r\n                                        : `/dashboard/users/${response.data.user._id}`;\r\n                                }\r\n                            });\r\n                        })\r\n                        .catch((error) => {\r\n                            const errors = error.response?.data?.message\r\n                                ? error.response?.data?.message\r\n                                : error?.response?.data?.errors;\r\n\r\n                            Swal.fire({\r\n                                html: `${\r\n                                    errors instanceof Array\r\n                                        ? `<ul class=\"text-start\">${Object.values(\r\n                                              error.response.data.errors\r\n                                          )\r\n                                              .map(\r\n                                                  (err) =>\r\n                                                      `<li>${err?.message}</li>`\r\n                                              )\r\n                                              .join('')}</ul>`\r\n                                        : errors\r\n                                }`,\r\n                                icon: 'error',\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: 'Ok, got it!',\r\n                                customClass: {\r\n                                    confirmButton: 'btn btn-primary',\r\n                                },\r\n                            });\r\n                        });\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    // Enable user account\r\n    const initEnableStatus = () => {\r\n        if (!userEnableBtn) {\r\n            return;\r\n        }\r\n\r\n        userEnableBtn.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n\r\n            // Show confirm popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n            Swal.fire({\r\n                text: 'Are you sure you want to enable this user account?',\r\n                icon: 'warning',\r\n                buttonsStyling: false,\r\n                showCancelButton: true,\r\n                cancelButtonText: 'No, cancel',\r\n                confirmButtonText: 'Yes, enable!',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-primary',\r\n                    cancelButton: 'btn btn-light',\r\n                },\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    axios\r\n                        .get(userEnableBtn.getAttribute('href'))\r\n                        .then((response) => {\r\n                            // Show success message. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n                            Swal.fire({\r\n                                text:\r\n                                    response?.data?.message ||\r\n                                    'User account has been enabled successfully.',\r\n                                icon: 'success',\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: 'Ok, got it!',\r\n                                customClass: {\r\n                                    confirmButton: 'btn btn-primary',\r\n                                },\r\n                                allowOutsideClick: false,\r\n                                showCancelButton: false,\r\n                            }).then((result) => {\r\n                                if (result.isConfirmed) {\r\n                                    location.reload();\r\n                                }\r\n                            });\r\n                        })\r\n                        .catch((error) => {\r\n                            const errors = error.response?.data?.message\r\n                                ? error.response?.data?.message\r\n                                : error?.response?.data?.errors;\r\n\r\n                            Swal.fire({\r\n                                html: `${\r\n                                    errors instanceof Array\r\n                                        ? `<ul class=\"text-start\">${Object.values(\r\n                                              error.response.data.errors\r\n                                          )\r\n                                              .map(\r\n                                                  (err) =>\r\n                                                      `<li>${err?.message}</li>`\r\n                                              )\r\n                                              .join('')}</ul>`\r\n                                        : errors\r\n                                }`,\r\n                                icon: 'error',\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: 'Ok, got it!',\r\n                                customClass: {\r\n                                    confirmButton: 'btn btn-primary',\r\n                                },\r\n                            });\r\n                        });\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    // Delete user account\r\n    const initDeleteAccount = () => {\r\n        if (!userDeleteBtn) {\r\n            return;\r\n        }\r\n\r\n        userDeleteBtn.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n\r\n            const url = userDeleteBtn.getAttribute('href');\r\n\r\n            // Show confirm popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n            Swal.fire({\r\n                text: 'Are you sure you want to delete this user account?',\r\n                icon: 'warning',\r\n                buttonsStyling: false,\r\n                showCancelButton: true,\r\n                cancelButtonText: 'No, cancel',\r\n                confirmButtonText: 'Yes, delete!',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-primary',\r\n                    cancelButton: 'btn btn-light',\r\n                },\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    axios\r\n                        .delete(url)\r\n                        .then((response) => {\r\n                            // Show success message. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n                            Swal.fire({\r\n                                text:\r\n                                    response?.data?.message ||\r\n                                    url.includes('self')\r\n                                        ? 'Your account has been deleted. Redirecting to the login page...'\r\n                                        : 'User account has been deleted. Redirecting to the users list...',\r\n                                icon: 'success',\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: 'Ok, got it!',\r\n                                customClass: {\r\n                                    confirmButton: 'btn btn-primary',\r\n                                },\r\n                                allowOutsideClick: false,\r\n                                showCancelButton: false,\r\n                            }).then((outcome) => {\r\n                                if (outcome.isConfirmed) {\r\n                                    location.href = url.includes('self')\r\n                                        ? '/dashboard/login'\r\n                                        : '/dashboard/users';\r\n                                }\r\n                            });\r\n                        })\r\n                        .catch((error) => {\r\n                            const errors = error.response?.data?.message\r\n                                ? error.response?.data?.message\r\n                                : error?.response?.data?.errors;\r\n\r\n                            Swal.fire({\r\n                                html: `${\r\n                                    errors instanceof Array\r\n                                        ? `<ul class=\"text-start\r\n                                        \">${Object.values(\r\n                                            error.response.data.errors\r\n                                        )\r\n                                            .map(\r\n                                                (err) =>\r\n                                                    `<li>${err?.message}</li>`\r\n                                            )\r\n                                            .join('')}</ul>`\r\n                                        : errors\r\n                                }`,\r\n                                icon: 'error',\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: 'Ok, got it!',\r\n                                customClass: {\r\n                                    confirmButton: 'btn btn-primary',\r\n                                },\r\n                            });\r\n                        });\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    return {\r\n        // Public functions\r\n        init() {\r\n            initDisableStatus();\r\n            initEnableStatus();\r\n            initDeleteAccount();\r\n        },\r\n    };\r\n})();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(() => {\r\n    KTUsersUpdateUtils.init();\r\n});\r\n\n\n//# sourceURL=webpack://besttripbd/../public/src/js/custom/apps/user-management/users/view/update-utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["../public/src/js/custom/apps/user-management/users/view/update-utils.js"]();
/******/ 	
/******/ })()
;