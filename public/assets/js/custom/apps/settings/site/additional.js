/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "../public/src/js/custom/apps/settings/site/additional.js":
/*!****************************************************************!*\
  !*** ../public/src/js/custom/apps/settings/site/additional.js ***!
  \****************************************************************/
/***/ (() => {

eval("\n\nvar KTAdditionalMetaList = (function () {\n    // Define shared variables\n    var table = document.getElementById('kt_table_additional');\n    var datatable;\n    var toolbarBase;\n    var toolbarSelected;\n    var selectedCount;\n\n    // Private functions\n    var initAdditionalTable = function () {\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\n        datatable = $(table).DataTable({\n            info: false,\n            order: [],\n            pageLength: 10,\n            // lengthChange: false,\n            columnDefs: [\n                { orderable: false, targets: 0 }, // Disable ordering on column 0 (checkbox)\n                { orderable: false, targets: 4 }, // Disable ordering on column 4(actions)\n            ],\n        });\n\n        // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw\n        datatable.on('draw', function () {\n            initToggleToolbar();\n            handleDeleteRows();\n            toggleToolbars();\n        });\n    };\n\n    // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\n    var handleSearchDatatable = () => {\n        const filterSearch = document.querySelector(\n            '[data-kt-additional-table-filter=\"search\"]'\n        );\n        filterSearch.addEventListener('keyup', function (e) {\n            datatable.search(e.target.value).draw();\n        });\n    };\n\n    // Delete subscirption\n    var handleDeleteRows = () => {\n        // Select all delete buttons\n        const deleteButtons = table.querySelectorAll(\n            '[data-kt-additional-table-filter=\"delete_row\"]'\n        );\n\n        deleteButtons.forEach((d) => {\n            // Delete button on click\n            d.addEventListener('click', function (e) {\n                e.preventDefault();\n\n                const url = d.getAttribute('href');\n\n                // Select parent row\n                const parent = e.target.closest('tr');\n\n                // Get additional name\n                const additionalName =\n                    parent.querySelectorAll('td')[1].innerText;\n\n                // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\n                Swal.fire({\n                    text:\n                        'Are you sure you want to delete ' +\n                        additionalName +\n                        '?',\n                    icon: 'warning',\n                    showCancelButton: true,\n                    buttonsStyling: false,\n                    confirmButtonText: 'Yes, delete!',\n                    cancelButtonText: 'No, cancel',\n                    customClass: {\n                        confirmButton: 'btn btn-primary',\n                        cancelButton: 'btn btn-active-light-primary',\n                    },\n                }).then(function (result) {\n                    if (result.value) {\n                        // Check axios library docs: https://axios-http.com/docs/intro\n                        axios\n                            .delete(url)\n                            .then((response) => {\n                                if (response) {\n                                    Swal.fire({\n                                        text:\n                                            'You have deleted ' +\n                                            additionalName +\n                                            '!.',\n                                        icon: 'success',\n                                        buttonsStyling: false,\n                                        confirmButtonText: 'Ok, got it!',\n                                        customClass: {\n                                            confirmButton: 'btn btn-primary',\n                                        },\n                                        allowOutsideClick: false,\n                                    })\n                                        .then(function () {\n                                            // Remove current row\n                                            datatable\n                                                .row($(parent))\n                                                .remove()\n                                                .draw();\n                                        })\n                                        .then(function () {\n                                            // Detect checked checkboxes\n                                            toggleToolbars();\n                                        });\n                                } else {\n                                    // Show error popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n                                    Swal.fire({\n                                        text:\n                                            response.data.message ||\n                                            'Sorry, we ran into an error! Please try again.',\n                                        icon: 'error',\n                                        buttonsStyling: false,\n                                        confirmButtonText: 'Ok, got it!',\n                                        customClass: {\n                                            confirmButton: 'btn btn-primary',\n                                        },\n                                    });\n                                }\n                            })\n                            .catch((error) => {\n                                const errors = error.response.data.message\n                                    ? error.response.data.message\n                                    : error.response.data.errors;\n\n                                Swal.fire({\n                                    html: `${\n                                        errors instanceof Array\n                                            ? `<ul class=\"text-start\">${Object.values(\n                                                  error.response.data.errors\n                                              )\n                                                  .map(\n                                                      (err) =>\n                                                          `<li>${err?.message}</li>`\n                                                  )\n                                                  .join('')}</ul>`\n                                            : errors\n                                    }`,\n                                    icon: 'error',\n                                    buttonsStyling: false,\n                                    confirmButtonText: 'Ok, got it!',\n                                    customClass: {\n                                        confirmButton: 'btn btn-primary',\n                                    },\n                                });\n                            });\n                    } else if (result.dismiss === 'cancel') {\n                        Swal.fire({\n                            text: additionalName + ' was not deleted.',\n                            icon: 'error',\n                            buttonsStyling: false,\n                            confirmButtonText: 'Ok, got it!',\n                            customClass: {\n                                confirmButton: 'btn btn-primary',\n                            },\n                        });\n                    }\n                });\n            });\n        });\n    };\n\n    // Init toggle toolbar\n    var initToggleToolbar = () => {\n        // Toggle selected action toolbar\n        // Select all checkboxes\n        const checkboxes = table.querySelectorAll('[type=\"checkbox\"]');\n\n        // Select elements\n        toolbarBase = document.querySelector(\n            '[data-kt-additional-table-toolbar=\"base\"]'\n        );\n        toolbarSelected = document.querySelector(\n            '[data-kt-additional-table-toolbar=\"selected\"]'\n        );\n        selectedCount = document.querySelector(\n            '[data-kt-additional-table-select=\"selected_count\"]'\n        );\n        const deleteSelected = document.querySelector(\n            '[data-kt-additional-table-select=\"delete_selected\"]'\n        );\n\n        // Toggle delete selected toolbar\n        checkboxes.forEach((c) => {\n            // Checkbox on click event\n            c.addEventListener('click', function () {\n                setTimeout(function () {\n                    toggleToolbars();\n                }, 50);\n            });\n        });\n\n        // Deleted selected rows\n        deleteSelected.addEventListener('click', function () {\n            // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\n            Swal.fire({\n                text: 'Are you sure you want to delete selected customers?',\n                icon: 'warning',\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: 'Yes, delete!',\n                cancelButtonText: 'No, cancel',\n                customClass: {\n                    confirmButton: 'btn btn-primary',\n                    cancelButton: 'btn btn-active-light-primary',\n                },\n            }).then(function (result) {\n                if (result.value) {\n                    Swal.fire({\n                        text: 'You have deleted all selected customers!.',\n                        icon: 'success',\n                        buttonsStyling: false,\n                        confirmButtonText: 'Ok, got it!',\n                        customClass: {\n                            confirmButton: 'btn btn-primary',\n                        },\n                    })\n                        .then(function () {\n                            // Remove all selected customers\n                            checkboxes.forEach((c) => {\n                                if (c.checked) {\n                                    datatable\n                                        .row($(c.closest('tbody tr')))\n                                        .remove()\n                                        .draw();\n                                }\n                            });\n\n                            // Remove header checked box\n                            const headerCheckbox =\n                                table.querySelectorAll('[type=\"checkbox\"]')[0];\n                            headerCheckbox.checked = false;\n                        })\n                        .then(function () {\n                            toggleToolbars(); // Detect checked checkboxes\n                            initToggleToolbar(); // Re-init toolbar to recalculate checkboxes\n                        });\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: 'Selected customers was not deleted.',\n                        icon: 'error',\n                        buttonsStyling: false,\n                        confirmButtonText: 'Ok, got it!',\n                        customClass: {\n                            confirmButton: 'btn btn-primary',\n                        },\n                    });\n                }\n            });\n        });\n    };\n\n    // Toggle toolbars\n    const toggleToolbars = () => {\n        // Select refreshed checkbox DOM elements\n        const allCheckboxes = table.querySelectorAll('tbody [type=\"checkbox\"]');\n\n        // Detect checkboxes state & count\n        let checkedState = false;\n        let count = 0;\n\n        // Count checked boxes\n        allCheckboxes.forEach((c) => {\n            if (c.checked) {\n                checkedState = true;\n                count++;\n            }\n        });\n\n        // Toggle toolbars\n        if (checkedState) {\n            selectedCount.innerHTML = count;\n            toolbarBase.classList.add('d-none');\n            toolbarSelected.classList.remove('d-none');\n        } else {\n            toolbarBase.classList.remove('d-none');\n            toolbarSelected.classList.add('d-none');\n        }\n    };\n\n    return {\n        // Public functions\n        init: function () {\n            if (!table) {\n                return;\n            }\n\n            initAdditionalTable();\n            initToggleToolbar();\n            handleSearchDatatable();\n            handleDeleteRows();\n        },\n    };\n})();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTAdditionalMetaList.init();\n});\n\n\n//# sourceURL=webpack://besttripbd/../public/src/js/custom/apps/settings/site/additional.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["../public/src/js/custom/apps/settings/site/additional.js"]();
/******/ 	
/******/ })()
;