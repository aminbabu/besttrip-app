/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "../public/src/js/custom/apps/settings/content/hotel-offers/delete-many.js":
/*!*********************************************************************************!*\
  !*** ../public/src/js/custom/apps/settings/content/hotel-offers/delete-many.js ***!
  \*********************************************************************************/
/***/ (() => {

eval("\r\n\r\n// Class definition for KTContentHotelOfferDeleteMany\r\nvar KTContentHotelOfferDeleteMany = (function () {\r\n    // Delete many hotel offers function\r\n    const deleteSelectedHotelOffers = async () => {\r\n        const deleteSelectedButton = document.querySelector(\r\n            '[data-kt-content-hotel-offers-table-select=\"delete_selected\"]'\r\n        );\r\n\r\n        deleteSelectedButton.addEventListener('click', async () => {\r\n            const selectedIds = [];\r\n\r\n            // Collect IDs of selected hotel offers\r\n            $('input.form-check-input-toggle:checked').each(function () {\r\n                if (this.value !== '1') {\r\n                    selectedIds.push(this.value);\r\n                }\r\n            });\r\n\r\n            if (selectedIds.length === 0) {\r\n                Swal.fire({\r\n                    text: 'No hotel offers selected.',\r\n                    icon: 'warning',\r\n                    buttonsStyling: false,\r\n                    confirmButtonText: 'Ok, got it!',\r\n                    customClass: {\r\n                        confirmButton: 'btn btn-primary',\r\n                    },\r\n                });\r\n                return;\r\n            }\r\n\r\n            // Show confirmation dialog using SweetAlert\r\n            Swal.fire({\r\n                title: 'Are you sure?',\r\n                text: 'Do you want to delete the selected hotel offers?',\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Yes, delete them!',\r\n                cancelButtonText: 'No, keep them',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-primary',\r\n                    cancelButton: 'btn btn-secondary',\r\n                },\r\n                buttonsStyling: false,\r\n            }).then(async (result) => {\r\n                if (result.isConfirmed) {\r\n                    try {\r\n                        // Send DELETE request to delete many hotel offers\r\n                        const response = await axios.delete(\r\n                            '/api/settings/content/hotel-offers/delete-many',\r\n                            {\r\n                                data: { ids: selectedIds },\r\n                            }\r\n                        );\r\n\r\n                        // Show success message\r\n                        Swal.fire({\r\n                            text:\r\n                                response?.data?.message ||\r\n                                'Hotel offers deleted successfully',\r\n                            icon: 'success',\r\n                            buttonsStyling: false,\r\n                            confirmButtonText: 'Ok, got it!',\r\n                            customClass: {\r\n                                confirmButton: 'btn btn-primary',\r\n                            },\r\n                        });\r\n\r\n                        // Remove only the selected rows from the table\r\n                        selectedIds.forEach((id) => {\r\n                            const row = document\r\n                                .querySelector(`input[value=\"${id}\"]`)\r\n                                .closest('tr');\r\n                            datatable.row($(row)).remove().draw();\r\n                        });\r\n\r\n                        // Update the toolbar\r\n                        toggleToolbars();\r\n                    } catch (error) {\r\n                        // Handle error response\r\n                        console.error('Error deleting hotel offers:', error);\r\n\r\n                        Swal.fire({\r\n                            text: 'There was an error deleting the hotel offers. Please try again.',\r\n                            icon: 'error',\r\n                            buttonsStyling: false,\r\n                            confirmButtonText: 'Ok, got it!',\r\n                            customClass: {\r\n                                confirmButton: 'btn btn-primary',\r\n                            },\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    // Toggle toolbars function\r\n    const toggleToolbars = () => {\r\n        const allCheckboxes = document.querySelectorAll(\r\n            '#kt_content_hotel_offers_table .form-check-input-toggle'\r\n        );\r\n\r\n        let checkedState = false;\r\n        let count = 0;\r\n\r\n        allCheckboxes.forEach((c) => {\r\n            if (c.checked && c.value !== '1') {\r\n                checkedState = true;\r\n                count++;\r\n            }\r\n        });\r\n\r\n        const toolbarBase = document.querySelector(\r\n            '[data-kt-content-hotel-offers-table-toolbar=\"base\"]'\r\n        );\r\n        const toolbarSelected = document.querySelector(\r\n            '[data-kt-content-hotel-offers-table-toolbar=\"selected\"]'\r\n        );\r\n        const selectedCount = document.querySelector(\r\n            '[data-kt-content-hotel-offers-table-select=\"selected_count\"]'\r\n        );\r\n\r\n        if (checkedState) {\r\n            selectedCount.innerHTML = count;\r\n            toolbarBase.classList.add('d-none');\r\n            toolbarSelected.classList.remove('d-none');\r\n        } else {\r\n            toolbarBase.classList.remove('d-none');\r\n            toolbarSelected.classList.add('d-none');\r\n        }\r\n    };\r\n\r\n    return {\r\n        // Public functions\r\n        init: function () {\r\n            deleteSelectedHotelOffers();\r\n\r\n            // Handle the \"Select All\" checkbox functionality\r\n            const selectAllCheckbox = document.querySelector(\r\n                '.form-check-input-toggle[data-kt-check=\"true\"]'\r\n            );\r\n\r\n            selectAllCheckbox.addEventListener('change', function () {\r\n                const isChecked = selectAllCheckbox.checked;\r\n                const targetCheckboxes = document.querySelectorAll(\r\n                    selectAllCheckbox.getAttribute('data-kt-check-target')\r\n                );\r\n\r\n                targetCheckboxes.forEach((checkbox) => {\r\n                    checkbox.checked = isChecked;\r\n                });\r\n\r\n                toggleToolbars();\r\n            });\r\n        },\r\n    };\r\n})();\r\n\r\n// On document ready\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    KTContentHotelOfferDeleteMany.init();\r\n});\r\n\n\n//# sourceURL=webpack://besttripbd/../public/src/js/custom/apps/settings/content/hotel-offers/delete-many.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["../public/src/js/custom/apps/settings/content/hotel-offers/delete-many.js"]();
/******/ 	
/******/ })()
;