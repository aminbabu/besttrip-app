/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../public/src/js/custom/apps/customers/update-utils.js":
/*!**************************************************************!*\
  !*** ../public/src/js/custom/apps/customers/update-utils.js ***!
  \**************************************************************/
/***/ (() => {

eval("// Class definition\nconst KTCustomersUpdateUtils = (function () {\n    // Shared variables\n    const customerDisableBtn = document.getElementById(\n        'kt_customers_disable_account'\n    );\n    const customerEnableBtn = document.getElementById(\n        'kt_customers_enable_account'\n    );\n    const customerDeleteBtn = document.querySelector(\n        '#kt_customers_delete_account'\n    );\n\n    // Disable customer account\n    const initDisableStatus = () => {\n        if (!customerDisableBtn) {\n            return;\n        }\n\n        customerDisableBtn.addEventListener('click', (e) => {\n            e.preventDefault();\n\n            const url = customerDisableBtn.getAttribute('href');\n\n            // Show confirm popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n            Swal.fire({\n                text: 'Are you sure you want to disable this customer account?',\n                icon: 'warning',\n                buttonsStyling: false,\n                showCancelButton: true,\n                cancelButtonText: 'No, cancel',\n                confirmButtonText: 'Yes, disable!',\n                customClass: {\n                    confirmButton: 'btn btn-primary',\n                    cancelButton: 'btn btn-light',\n                },\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    axios\n                        .get(url)\n                        .then((response) => {\n                            // Show success message. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n                            Swal.fire({\n                                text:\n                                    response?.data?.message ||\n                                    'Customer account has been disabled.',\n                                icon: 'success',\n                                buttonsStyling: false,\n                                confirmButtonText: 'Ok, got it!',\n                                customClass: {\n                                    confirmButton: 'btn btn-primary',\n                                },\n                                allowOutsideClick: false,\n                                showCancelButton: false,\n                            }).then((outcome) => {\n                                if (outcome.isConfirmed) {\n                                    location.reload();\n                                }\n                            });\n                        })\n                        .catch((error) => {\n                            const errors = error.response?.data?.message\n                                ? error.response?.data?.message\n                                : error?.response?.data?.errors;\n\n                            Swal.fire({\n                                html: `${\n                                    errors instanceof Array\n                                        ? `<ul class=\"text-start\">${Object.values(\n                                              error.response.data.errors\n                                          )\n                                              .map(\n                                                  (err) =>\n                                                      `<li>${err?.message}</li>`\n                                              )\n                                              .join('')}</ul>`\n                                        : errors\n                                }`,\n                                icon: 'error',\n                                buttonsStyling: false,\n                                confirmButtonText: 'Ok, got it!',\n                                customClass: {\n                                    confirmButton: 'btn btn-primary',\n                                },\n                            });\n                        });\n                }\n            });\n        });\n    };\n\n    // Enable customer account\n    const initEnableStatus = () => {\n        if (!customerEnableBtn) {\n            return;\n        }\n\n        customerEnableBtn.addEventListener('click', (e) => {\n            e.preventDefault();\n\n            // Show confirm popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n            Swal.fire({\n                text: 'Are you sure you want to enable this customer account?',\n                icon: 'warning',\n                buttonsStyling: false,\n                showCancelButton: true,\n                cancelButtonText: 'No, cancel',\n                confirmButtonText: 'Yes, enable!',\n                customClass: {\n                    confirmButton: 'btn btn-primary',\n                    cancelButton: 'btn btn-light',\n                },\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    axios\n                        .get(customerEnableBtn.getAttribute('href'))\n                        .then((response) => {\n                            // Show success message. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n                            Swal.fire({\n                                text:\n                                    response?.data?.message ||\n                                    'Customer account has been enabled successfully.',\n                                icon: 'success',\n                                buttonsStyling: false,\n                                confirmButtonText: 'Ok, got it!',\n                                customClass: {\n                                    confirmButton: 'btn btn-primary',\n                                },\n                                allowOutsideClick: false,\n                                showCancelButton: false,\n                            }).then((result) => {\n                                if (result.isConfirmed) {\n                                    location.reload();\n                                }\n                            });\n                        })\n                        .catch((error) => {\n                            const errors = error.response?.data?.message\n                                ? error.response?.data?.message\n                                : error?.response?.data?.errors;\n\n                            Swal.fire({\n                                html: `${\n                                    errors instanceof Array\n                                        ? `<ul class=\"text-start\">${Object.values(\n                                              error.response.data.errors\n                                          )\n                                              .map(\n                                                  (err) =>\n                                                      `<li>${err?.message}</li>`\n                                              )\n                                              .join('')}</ul>`\n                                        : errors\n                                }`,\n                                icon: 'error',\n                                buttonsStyling: false,\n                                confirmButtonText: 'Ok, got it!',\n                                customClass: {\n                                    confirmButton: 'btn btn-primary',\n                                },\n                            });\n                        });\n                }\n            });\n        });\n    };\n\n    // Delete customer account\n    const initDeleteAccount = () => {\n        if (!customerDeleteBtn) {\n            return;\n        }\n\n        customerDeleteBtn.addEventListener('click', (e) => {\n            e.preventDefault();\n\n            const url = customerDeleteBtn.getAttribute('href');\n\n            // Show confirm popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n            Swal.fire({\n                text: 'Are you sure you want to delete this customer account?',\n                icon: 'warning',\n                buttonsStyling: false,\n                showCancelButton: true,\n                cancelButtonText: 'No, cancel',\n                confirmButtonText: 'Yes, delete!',\n                customClass: {\n                    confirmButton: 'btn btn-primary',\n                    cancelButton: 'btn btn-light',\n                },\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    axios\n                        .delete(url)\n                        .then((response) => {\n                            // Show success message. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n                            Swal.fire({\n                                text:\n                                    response?.data?.message ||\n                                    'Customer account has been deleted. Redirecting to the customers list...',\n                                icon: 'success',\n                                buttonsStyling: false,\n                                confirmButtonText: 'Ok, got it!',\n                                customClass: {\n                                    confirmButton: 'btn btn-primary',\n                                },\n                                allowOutsideClick: false,\n                                showCancelButton: false,\n                            }).then((outcome) => {\n                                if (outcome.isConfirmed) {\n                                    location.href = '/dashboard/customers';\n                                }\n                            });\n                        })\n                        .catch((error) => {\n                            const errors = error.response?.data?.message\n                                ? error.response?.data?.message\n                                : error?.response?.data?.errors;\n\n                            Swal.fire({\n                                html: `${\n                                    errors instanceof Array\n                                        ? `<ul class=\"text-start\n                                        \">${Object.values(\n                                            error.response.data.errors\n                                        )\n                                            .map(\n                                                (err) =>\n                                                    `<li>${err?.message}</li>`\n                                            )\n                                            .join('')}</ul>`\n                                        : errors\n                                }`,\n                                icon: 'error',\n                                buttonsStyling: false,\n                                confirmButtonText: 'Ok, got it!',\n                                customClass: {\n                                    confirmButton: 'btn btn-primary',\n                                },\n                            });\n                        });\n                }\n            });\n        });\n    };\n\n    return {\n        // Public functions\n        init() {\n            initDisableStatus();\n            initEnableStatus();\n            initDeleteAccount();\n        },\n    };\n})();\n\n// On document ready\nKTUtil.onDOMContentLoaded(() => {\n    KTCustomersUpdateUtils.init();\n});\n\n\n//# sourceURL=webpack://besttripbd/../public/src/js/custom/apps/customers/update-utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["../public/src/js/custom/apps/customers/update-utils.js"]();
/******/ 	
/******/ })()
;